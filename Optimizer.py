import numpy as np



world2base=np.array([[-0.75169453,  0.36119434, -0.55180973, -0.92178217],
  [0.53491062 , 0.82332452, -0.18975605, -0.87791514],
  [0.38577967, -0.43780747 ,-0.81209523  ,0.4758178],
  [0.         , 0.          ,0.         , 1.        ]]);
gripper2baseMat=np.array([
[-0.58301632 ,-0.58340554, -0.56544668 ,-0.31047764],[ -0.51109442 , 0.80436891, -0.30294084 ,-0.32324689],
[ 0.63156509,  0.11237719, -0.76713552 , 0.52924128],
[0.        ,  0.  ,        0.     ,     1.        ]
])
cam2gripperMat=np.array([[ 0.65023713, -0.75828364 ,-0.04687845 ,-0.04783965],
                        [0.75948385,  0.64721192,  0.06558212 , 0.04023272],
                        [-0.01938956 ,-0.07824736,  0.9967454  ,-0.30242583],       
                        [ 0.       ,   0.      ,    0.        ,  1.        ]])
world2camMat=([[ 0.95903578, -0.2824886 , -0.02122661 , 0.30552397],
[ 0.28317674  ,0.95804545 , 0.04427026 ,-0.65083673],
[ 0.00783022, -0.04846765 , 0.99879406  ,0.81475   ],
[ 0.      ,    0.    ,      0.       ,   1.        ]])


###
print("\n\n\n",gripper2baseMat,"\n\n\n",world2camMat)

gripper2baseMat1=np.array([[-0.58319882 ,-0.58315571, -0.56551619, -0.31054656],
[-0.51105742 , 0.80452666, -0.30258415 ,-0.32312652],
[ 0.63142652  ,0.11254452 ,-0.76722505  ,0.52916252],
[ 0.    ,      0.     ,     0.       ,   1.        ]])

world2camMat1=np.array([[ 0.24530404, -0.96919365 , 0.02212677 , 0.69894902],
[ 0.42127607 , 0.08601344, -0.90284448 ,-0.49416625],
[ 0.87312794 , 0.23079288 , 0.42939754 , 0.95676922],
[ 0.        ,  0.       ,   0.         , 1.        ]])

goal1=np.asarray([-759,-452,119])/1000


 ##

gripper2baseMat2=np.array([[-0.58307452, -0.58324183 ,-0.56555554 ,-0.35996111],
[-0.51112773,  0.80445619 ,-0.30265275, -0.35553171],
[ 0.6314844 ,  0.11260202, -0.76716898  ,0.45497281],
[ 0.     ,    0.     ,     0.        ,  1.        ]])


world2camMat2=np.array([[ 0.56976272 ,-0.2841457 ,  0.77112364, -0.21144645],
 [ 0.51614598  ,0.853898  , -0.06671989, -0.55553714],
 [-0.63950276 , 0.43602687 , 0.6331799  , 0.78245454],
 [ 0.         , 0.        ,  0.       ,   1.        ]])

goal2=np.asarray([-482,-844,123])/1000


print(gripper2baseMat,"\n",cam2gripperMat)
#print(np.dot(np.dot(gripper2baseMat,cam2gripperMat),world2camMat))

##


gripper2baseMat3=np.array([[-0.58323835, -0.58317715, -0.56545331, -0.31055341],
 [-0.51108966,  0.80451321, -0.30256545, -0.32313459],
 [ 0.63136391,  0.11252957, -0.76727877,  0.52911954],
 [ 0.   ,       0.        ,  0.       ,   1.  ,      ]])
world2camMat3=np.asarray([[ 0.14273834, -0.55357061, -0.82047873 , 0.36845302],
[ 0.55482785,  0.73122654, -0.39682968, -0.36833496],
[ 0.81962907 ,-0.39858165,  0.41151045 , 0.77674999],
[ 0.   ,       0.       ,   0.         , 1.        ]])
goal3=np.asarray([-675.,-589,123])/1000


##


gripper2baseMat4=np.array([[-0.58341145 ,-0.58313503 ,-0.56531815, -0.3105387 ],
 [-0.51108535 , 0.80455302, -0.30246686, -0.32313907],
 [ 0.63120745 , 0.11246319, -0.76741722 , 0.52901671],
 [ 0.         , 0.         , 0.        ,  1.        ]])
world2camMat4=np.array([[ 0.12285099, -0.86365311, -0.48888746 , 0.87891508],
 [ 0.6672239  , 0.43654565 ,-0.60352313 ,-0.2774077 ],
 [ 0.73465632, -0.25205399 , 0.62988006 , 0.762125  ],
 [ 0.       ,   0.   ,       0.    ,      1.        ]])
goal4=np.asarray([-791.,-322,75])/1000


##

gripper2baseMat5=np.array([[-0.58317651, -0.58314261, -0.5655527 , -0.31061407],
[-0.51102935 , 0.80453654, -0.30260528, -0.3231698 ],
[ 0.63146985 , 0.11254173 ,-0.7671898 ,  0.5291745 ],
[ 0.  ,        0.     ,     0.        ,  1.        ]])


world2camMat5=np.array([[ 0.326532 ,  -0.7094476,  -0.62454861 ,-0.19876804],
 [ 0.6005402 ,  0.66597493, -0.44252555, -0.52662073],
 [ 0.7298824 , -0.23056779  ,0.64351393,  0.80916667],
 [ 0.   ,       0.     ,     0.       ,   1.        ]])

goal5=np.asarray([-585.,-849,75])/1000


##

gripper2baseMat6=np.array([[-0.58310675, -0.58327227, -0.56549092 ,-0.31051357],
[-0.51117394,  0.80443473, -0.30263173,-0.32315063],
[ 0.63141723 , 0.11259763, -0.7672249 ,  0.52918228],
[ 0.   ,       0. ,         0.       ,   1.        ]])


world2camMat6=np.array([[ 0.47761987 ,-0.00655028 ,-0.87854218, -0.15412026],
[ 0.72039664 , 0.57531309,  0.38735453 ,-0.73461709],
[ 0.50289953 ,-0.81790705 , 0.27949976 , 0.83700001],
[ 0.      ,    0.    ,      0.  ,        1.        ]])

goal6=np.asarray([-521,-953,75])/1000


def Cam2GripFunction(x,y,z):

    matrix=np.asarray([[ 0.65023713, -0.75828364, -0.04687845, -0.04783965*x],
                [ 0.75948385 , 0.64721192,  0.06558212,  0.04023272*y],
                 [-0.01938956 ,-0.07824736,  0.9967454,  -0.30242583*z],
                [0.    ,      0.        ,  0.         , 1.        ]])
    return matrix

x_list=np.linspace(1, 6, 100)
y_list=np.linspace(0, 3, 100)
z_list=np.linspace(0, 1 ,100)
factor=[0,0,0]
#print(gripper2baseMat*cam2gripperMat)
num=8000000000;
goal=np.array([-612,-663,200])/1000
factor=[[0,0,0]]
all=len(x_list)+len(y_list)+len(z_list)
i=0
factor=[]

for i in x_list:
    for j in y_list:
        for k in z_list:
            cm=Cam2GripFunction(i,j,k)

            
            wb1=np.dot(np.dot(gripper2baseMat1,cm),world2camMat1)
            pos1=np.array([wb1[0,3],wb1[1,3],wb1[2,3]])

            wb2=np.dot(np.dot(gripper2baseMat2,cm),world2camMat2)
            pos2=np.array([wb2[0,3],wb2[1,3],wb2[2,3]])

            wb3=np.dot(np.dot(gripper2baseMat3,cm),world2camMat3)
            pos3=np.array([wb3[0,3],wb3[1,3],wb3[2,3]])

            wb4=np.dot(np.dot(gripper2baseMat4,cm),world2camMat4)
            pos4=np.array([wb3[0,3],wb4[1,3],wb4[2,3]])

            wb5=np.dot(np.dot(gripper2baseMat5,cm),world2camMat5)
            pos5=np.array([wb5[0,3],wb5[1,3],wb5[2,3]])

            wb6=np.dot(np.dot(gripper2baseMat6,cm),world2camMat6)
            pos6=np.array([wb6[0,3],wb6[1,3],wb6[2,3]])

            val1=(np.linalg.norm((pos1-goal),2))
            val2=(np.linalg.norm((pos2-goal2),2))
            val3=(np.linalg.norm((pos3-goal3),2))
            val4=(np.linalg.norm((pos4-goal4),2))
            val5=(np.linalg.norm((pos5-goal5),2))
            val6=(np.linalg.norm((pos6-goal6),2))

            val=np.linalg.norm([[val1-val2-val3-val4-val5-val6]])
            if np.abs(val)<abs(num):
                num=val
                print("\n")

                print("here",num)
                print(i,j,k)

                factor=[i,j,k]
print("x",factor[0],"y",factor[1],"z",factor[2])


print(Cam2GripFunction(13,1,1.21))

